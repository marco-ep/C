        cseg
        ldAi   estack    ;
        xchAS            ;
        jmp    main      ;

!--------------------------------------------------!
!    (hi,lo) = a*b         !
mul     ldA    a         ;
        stA    tlo       ;
        ldAi   0         ;
        stA    thi       ;
        stA    lo        ;
        stA    hi        ;

lp      ldA    b         ; 
        cmpAi  0         ;
        je     mulend    ;

        rcrA             ;
        stA    b         ;
        jae    shift     ;

        ldA    lo        ;
        clc              ;
        adcA   tlo       ;
        stA    lo        ;

        ldA    hi        ;
        adcA   thi       ;
        stA    hi        ;

shift   clc              ;
        ldA    tlo       ;
        rclA             ;
        stA    tlo       ;

        ldA    thi       ;
        rclA             ;
        stA    thi       ;

        jmp    lp        ;

mulend  ret              ;

!--------------------------------------------------!
! asnwer = int(sqrt(n)) , 0 <= n <= ffff !
sqrt    ldAi   0         ;
        stA    answer    ; ! answer = 0 !
        ldAi   1         ; 
        stA    odd       ; ! odd = 1 !
        stA    sum       ; ! sum = 1 !

loop    cmpA   n         ; ! terminate loop if sum > n !
        ja     sqend     ;
       
        ldA    answer    ;
        clc              ;
        adcAi  1         ;
        stA    answer    ; ! answer ++ !

        ldA    odd       ;
        clc              ;
        adcAi  2         ;
        stA    odd       ; ! odd += 2 !

        clc              ;
        adcA   sum       ;
        stA    sum       ; ! sum += odd !

        jb     sqend     ; ! fixes a bug so will work on n = ffff !

        jmp    loop      ;

sqend   ret              ;

!--------------------------------------------------!
! z = sqrt(x*y) - sqrt(x)*sqrt(y) !
! assume x*y fits in one word !
main    ldA    x         ;
        stA    a         ;
        ldA    y         ;
        stA    b         ;
        call   mul       ;
        ldA    lo        ;
        stA    xy        ;

        ldA    xy        ;
        stA    n         ;
        call   sqrt      ;
        ldA    answer    ;
        stA    sxy       ;

        ldA    x         ;
        stA    n         ;
        call   sqrt      ;
        ldA    answer    ;
        stA    sx        ;

        ldA    y         ;
        stA    n         ;
        call   sqrt      ;
        ldA    answer    ;
        stA    sy        ;
        
        ldA    sx        ;
        stA    a         ;
        ldA    sy        ;
        stA    b         ;
        call   mul       ;
        ldA    lo        ;
        stA    sxsy      ;

        ldA    sxy       ;
        clc              ;
        sbbA   sxsy      ;
        stA    z         ;

done    jmp    done      ;

        dseg

!vars for main   !
x       rw     1         ;
y       rw     1         ;
z       rw     1         ;
xy      rw     1         ;
sxy     rw     1         ;
sx      rw     1         ;
sy      rw     1         ;
sxsy    rw     1


! vars for mul   !
a       rw     1         ;
b       rw     1         ;
hi      rw     1         ;
lo      rw     1         ;
thi     rw     1         ;
tlo     rw     1         ;

!vars for sqrt !
n       rw     1         ; ! number to take sqrt of !
answer  rw     1         ; 
odd     rw     1         ;
sum     rw     1         ;


stack   rw  2000         ;
estack  rw     1         ;
        end
      
